{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","style","color","gutterBottom","variant","fontWeight","fontSize","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NC8DpJC,EAzDD,SAAC,GAA4D,IAAD,IAAzDC,KAASC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,WACpD,OAAIH,EAIA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,cAAY,GAAhD,YACA,kBAACH,EAAA,EAAD,CAAYI,QAAQ,KAAKH,MAAO,CAACI,WAAY,SAAUC,SAAU,SAC7D,kBAAC,IAAD,CACAC,MAAO,EACPC,IAAK3B,EAAU4B,MACfC,SAAU,EACVC,UAAU,OAGd,kBAACX,EAAA,EAAD,CAAYG,cAAY,GAAE,IAAIS,KAAK5B,GAAY6B,gBAC/C,kBAACb,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASE,QAAQ,SAA5C,wCAGR,kBAAChB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YACzE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,cAAY,GAAhD,aACA,kBAACH,EAAA,EAAD,CAAYI,QAAQ,KAAKH,MAAO,CAACI,WAAY,SAAUC,SAAU,SAC7D,kBAAC,IAAD,CACAC,MAAO,EACPC,IAAK1B,EAAU2B,MACfC,SAAU,EACVC,UAAU,OAGd,kBAACX,EAAA,EAAD,CAAYG,cAAY,GAAE,IAAIS,KAAK5B,GAAY6B,gBAC/C,kBAACb,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASE,QAAQ,SAA5C,wCAGR,kBAAChB,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SACzE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,cAAY,GAAhD,UACA,kBAACH,EAAA,EAAD,CAAYI,QAAQ,KAAKH,MAAO,CAACI,WAAY,SAAUC,SAAU,SAC7D,kBAAC,IAAD,CACAC,MAAO,EACPC,IAAKzB,EAAO0B,MACZC,SAAU,EACVC,UAAU,OAGd,kBAACX,EAAA,EAAD,CAAYG,cAAY,GAAE,IAAIS,KAAK5B,GAAY6B,gBAC/C,kBAACb,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASE,QAAQ,SAA5C,2CA/CT,c,iCCNTU,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEhBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQbtC,KAAQC,EARK,EAQLA,UAAWC,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQC,EARzB,EAQyBA,WARzB,kBAUd,CAAEH,YAAWC,YAAWC,SAAQC,eAVlB,2HAAH,sDAgBTqC,EAAc,uCAAG,8BAAAJ,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElBlC,EAFkB,EAElBA,KAFkB,kBAInBA,EAAK0C,KAAI,gBAAGzC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,OAAoBwC,EAAlC,EAAsBC,WAAtB,MAA8C,CAAE3C,UAAWA,EAAU4C,MAAO1C,OAAQA,EAAO0C,MAAOF,YAJxF,wHAAH,qDAUdG,EAAc,uCAAG,8BAAAT,EAAA,+EAEWE,IAAMC,IAAN,UAAaN,EAAb,eAFX,uBAEVa,EAFU,EAElB/C,KAAQ+C,UAFU,kBAInBA,EAAUL,KAAI,SAACN,GAAD,OAAaA,EAAQY,SAJhB,wHAAH,qD,iBC0CZC,EAjED,SAAC,GAAyD,IAAD,IAAtDjD,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUiC,EAAc,EAAdA,QAAc,EACnCc,mBAAS,IAD0B,mBAC9DC,EAD8D,KACnDC,EADmD,KAGrEC,qBAAU,YACQ,uCAAG,4BAAAhB,EAAA,sEACcI,IADd,OACXa,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJvD,EACE,kBAAC,IAAD,CACED,KAAM,CACJyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,UAAW,UAAW,WACxC5D,KAAM,CAACC,EAAU4B,MAAO3B,EAAU2B,MAAO1B,EAAO0B,UAItDgC,QAAS,CACPvC,MAAO,OACPwC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsB7B,OAGpD,KAGA8B,EACJf,EAAU,GACR,kBAAC,IAAD,CACEnD,KAAM,CACJyD,OAAQN,EAAUT,KAAI,qBAAGC,QACzBe,SAAU,CAAC,CACT1D,KAAMmD,EAAUT,KAAI,SAAC1C,GAAD,OAAUA,EAAKC,aACnC0D,MAAO,WACPQ,YAAa,UACbC,MAAM,GACL,CACDpE,KAAMmD,EAAUT,KAAI,SAAC1C,GAAD,OAAUA,EAAKG,UACnCwD,MAAO,SACPQ,YAAa,UACbP,gBAAiB,uBACjBQ,MAAM,OAKV,KAGN,OACE,yBAAK/D,UAAWC,IAAOC,WACpB6B,EAAUoB,EAAWU,I,mCCzCbG,EArBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACXpB,mBAAS,IADE,mBACtCH,EADsC,KAC3BwB,EAD2B,KAW7C,OARAlB,qBAAU,YACM,uCAAG,sBAAAhB,EAAA,kEACfkC,EADe,SACIzB,IADJ,6EAAH,qDAId0B,KACC,IAGD,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOlD,SAC1E,4BAAQA,MAAM,IAAd,UACCkB,EAAUL,KAAI,SAACN,EAAS4C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGnD,MAAOO,GAAUA,S,iBCiBzD8C,E,4MA9BbC,MAAQ,CACNnF,KAAM,GACNoC,QAAS,I,EASXkC,oB,uCAAsB,WAAOlC,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdpC,EADc,OAGpB,EAAKoF,SAAS,CAAEpF,OAAMoC,QAASA,IAHX,2C,wPALDD,I,OAAbnC,E,OAENqF,KAAKD,SAAS,CAAEpF,S,qIASR,IAAD,EACmBqF,KAAKF,MAAvBnF,EADD,EACCA,KAAMoC,EADP,EACOA,QAEd,OACE,yBAAK/B,UAAWC,IAAOC,WACrB,kBAAC,EAAD,CAAOP,KAAMA,IACb,kBAACsF,EAAD,CAAehB,oBAAqBe,KAAKf,sBACzC,kBAAC,EAAD,CAAOtE,KAAMA,EAAMoC,QAASA,S,GAzBlBmD,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHjD/F,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.5f57091b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__Y9OU3\",\"card\":\"Cards_card__r6mVB\",\"infected\":\"Cards_infected__2c2DF\",\"recovered\":\"Cards_recovered__1zPta\",\"deaths\":\"Cards_deaths__3v7HR\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames'\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({ data : { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography style={{color: '#999'}} gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\" style={{fontWeight: 'bolder', fontSize: '35px'}}>\r\n                            <CountUp \r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={5}\r\n                            separator=\".\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography style={{color: '#999'}} variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography style={{color: '#999'}} gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\" style={{fontWeight: 'bolder', fontSize: '35px'}}>\r\n                            <CountUp \r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={5}\r\n                            separator=\".\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography style={{color: '#999'}} variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography style={{color: '#999'}} gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\" style={{fontWeight: 'bolder', fontSize: '35px'}}>\r\n                            <CountUp \r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={5}\r\n                            separator=\".\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography style={{color: '#999'}} variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['#ad62aa', '#21bf73', '#ec7373'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          color: '#fff',\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#ad62aa',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#ec7373',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.2)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","\r\nimport React from 'react';\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__Jfbtf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2nvmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2XpMV\"};"],"sourceRoot":""}